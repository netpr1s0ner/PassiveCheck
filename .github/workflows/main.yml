name: Build and Release PassiveCheck

on:
  push:
    tags:
      - "v*"  # 仅在 tag 触发时运行，例如 v1.0.0
  workflow_dispatch:  # 允许手动触发

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        goos: [windows, linux, darwin]
        goarch: [amd64, arm64]
        exclude:
          - os: windows-latest
            goos: linux
          - os: windows-latest
            goos: darwin
          - os: ubuntu-latest
            goos: windows
          - os: macos-latest
            goos: windows

    runs-on: ${{ matrix.os }}

    steps:
    - name: 检出代码
      uses: actions/checkout@v3

    - name: 设置 Go 语言环境
      uses: actions/setup-go@v4
      with:
        go-version: '1.23'

    - name: 编译 PassiveCheck
      run: |
        go env -w GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }}
        output_name="PassiveCheck-${{ matrix.goos }}-${{ matrix.goarch }}"
        [ "${{ matrix.goos }}" == "windows" ] && output_name="${output_name}.exe"
        go build -o $output_name cmd/PassiveCheck/PassiveCheck.go

    - name: 上传构建产物
      uses: actions/upload-artifact@v3
      with:
        name: PassiveCheck-${{ matrix.goos }}-${{ matrix.goarch }}
        path: PassiveCheck-${{ matrix.goos }}-${{ matrix.goarch }}*

  release:
    needs: build  # 确保构建完成后再执行发布
    runs-on: ubuntu-latest
    steps:
    - name: 检出代码
      uses: actions/checkout@v3

    - name: 下载所有构建产物
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: 发布到 GitHub Releases
      uses: softprops/action-gh-release@v1
      with:
        files: artifacts/**/*
        body: "自动发布的版本 🚀"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
